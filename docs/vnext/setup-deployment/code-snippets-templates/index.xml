<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code snippets &amp; templates on Catel docs</title>
    <link>http://docs.catelproject.com/vnext/setup-deployment/code-snippets-templates/</link>
    <description>Recent content in Code snippets &amp; templates on Catel docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://docs.catelproject.com/vnext/setup-deployment/code-snippets-templates/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using the code snippets</title>
      <link>http://docs.catelproject.com/vnext/setup-deployment/code-snippets-templates/using-the-code-snippets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://docs.catelproject.com/vnext/setup-deployment/code-snippets-templates/using-the-code-snippets/</guid>
      <description>This part of the documentation explains all the code snippets.
Code snippet|Explanation -|- modelobject|Defines a model using the ModelBase class. modelprop|Defines a new property on a model class. modelpropchanged|Defines a new property with change notification on a model class. vm|Defines a new view model. vmcommand|Defines a new view model command with only an executed action. vmcommandwithcanexecute|Defines a new view model command with an executed action, but also a canexecute function. vmprop|Defines a new property on a view model.</description>
    </item>
    
    <item>
      <title>Using the item templates</title>
      <link>http://docs.catelproject.com/vnext/setup-deployment/code-snippets-templates/using-the-item-templates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://docs.catelproject.com/vnext/setup-deployment/code-snippets-templates/using-the-item-templates/</guid>
      <description>There are lots of item templates available for Catel so it is really easy to develop new views very fast.
Difference between logic in view base or behavior As you might have noticed, there are lots of &amp;ldquo;double&amp;rdquo; item templates. However, there is a substantial difference between the item templates that implement the logic in the view base or the logic in a behavior.
Shortly said, a view with the logic in the view base is defined like this:</description>
    </item>
    
    <item>
      <title>Using the project templates</title>
      <link>http://docs.catelproject.com/vnext/setup-deployment/code-snippets-templates/using-the-project-templates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://docs.catelproject.com/vnext/setup-deployment/code-snippets-templates/using-the-project-templates/</guid>
      <description>There are several project templates available for Catel. The easiest way is to follow these steps.
Using the project templates Create a new project. Make sure that at least .NET Framework 4.0 is selected as target framework. The templates can be found under the Catel folder as shown in the image below:
As soon as the project is created, the only thing left to do is add references to the Catel libraries.</description>
    </item>
    
  </channel>
</rss>